#Database properties to access the database
# JDBC: Java Database Connectivity - Java API to connect and execute the SQL query with the database
#       required 1 of 4 types of drivers to be configured to gain access to the database
# mysql: the specific type of database driver used in this case
# //localhost:3360/:  the server IP address; localhost used in local development; but would be an actual server IP in real-world applications
# user_management: name of the database schema used as the datasource for the application/api
spring.datasource.url=jdbc:mysql://localhost:3306/user_management
spring.datasource.username=root
spring.datasource.password=Root@098

# hibernate dialect: used to create the appropriate SQL statements with respect to configured database, MySQL in this case
# hibernate.ddl-auto: tells Hibernate to create the database tables automatically if they don't exist
#       and if they exist, then change or alter the tables as per the jpa entity mapping changes
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=update

#Actuator Exposed Endpoints; * means all endpoints exposed
management.endpoints.web.exposure.include=*

#leverage the /actuator/info endpoint to view defined information
management.info.env.enabled=true
info.app.description=Spring Boot Restful Web Services Demo

#leverage the /actuator/health endpoint to get status, components, diskSpace, and ping Application details
management.endpoint.health.show-details=always

#The /actuator/beans endpoint - get all the beans defined and/or autoconfigured in the Application
#The /actuator/conditions endpoint shows the autoconfiguration [beans] report, categorized into positiveMatches and negativeMatches
#The /actuator/mappings endpoint shows all the @RequestMapping paths declared in the Application
#The /actuator/metrics endpoint shows various metrics about the current application - memory usage, memory free, size of the heap, # threads
#The /actuator/configprops endpoint shows all the config properties defined by @ConfigurationProperties bean, including
##configuration properties defined in the application.properties or .yaml files
#The /actuator/env exposes all the properties from the Spring's ConfigurableEnvironment interface, such as list of active profiles
### application properties, system environment variables etc & /
# The /actuator/threaddump endpoint view applications's thread deumb with running threads details and JVM stack trace
#The /actuator/loggers endpoint view and configure the log levels of your application
#The /actuator/shutdown endpoint used to gracefully shut down the application; not enabled by default - must add the
## Management.endpoint.shutdown.enabled=true to use
